<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>// Place global declarations here.

chan adultOn;
chan childOn;
broadcast chan off;
broadcast chan offBoat[6];
broadcast chan onBoat[6];
int[0,1] boatL;
clock time;
typedef int[-1,5] personType;
//{not a person, boy,dad,girl,mom,thief,police}
const personType NOT_A_PERSON = -1;
const personType BOY  = 0;
const personType DAD  = 1;
const personType GIRL  = 2;
const personType MOM  = 3;
const personType THIEF  = 4;
const personType POLICE  = 5;

const int SAIL_TIME = 1;

bool verifyGroup(personType type[8], int size)
{
	//Mom constraint
	return true;
}

bool contains(personType type[8], int size, personType value)
{
	int i;
	for(i = 0 ; i &lt; size ; i++)
	{
		if(type[i] == value)
		{
			return true;
		}
	}
	
	return false;
}</declaration><template><name x="5" y="5">Boat</name><declaration>// Place local declarations here.

clock x;
</declaration><location id="id0" x="128" y="112"><name x="152" y="104">sailing</name><label kind="invariant" x="118" y="127">x &lt;= SAIL_TIME</label></location><location id="id1" x="312" y="8"><urgent/></location><location id="id2" x="128" y="-96"><urgent/></location><location id="id3" x="-152" y="8"><name x="-216" y="0">still</name></location><init ref="id3"/><transition><source ref="id0"/><target ref="id3"/><label kind="select" x="16" y="48">e : personType</label><label kind="guard" x="-16" y="96">x == SAIL_TIME</label><label kind="synchronisation" x="-56" y="24">offBoat[e]!</label><label kind="assignment" x="-168" y="40">boatL := 1-boatL</label></transition><transition><source ref="id1"/><target ref="id0"/><label kind="assignment" x="256" y="48">x = 0</label></transition><transition><source ref="id2"/><target ref="id0"/><label kind="assignment" x="88" y="-8">x = 0</label></transition><transition><source ref="id2"/><target ref="id1"/><label kind="synchronisation" x="296" y="-120">adultOn?</label><nail x="312" y="-96"/></transition><transition><source ref="id2"/><target ref="id1"/><label kind="synchronisation" x="208" y="-72">childOn?</label></transition><transition><source ref="id3"/><target ref="id2"/><label kind="synchronisation" x="-136" y="-55">adultOn?</label></transition></template><template><name>Person</name><parameter>chan &amp;on, personType type</parameter><declaration>int[0,1] L;</declaration><location id="id4" x="-536" y="-168"><urgent/></location><location id="id5" x="-432" y="-80"><name x="-442" y="-110">onboat</name></location><location id="id6" x="-656" y="-80"><name x="-696" y="-96">still</name></location><init ref="id6"/><transition><source ref="id6"/><target ref="id4"/><label kind="guard" x="-680" y="-136">L == boatL</label><label kind="synchronisation" x="-600" y="-160">on!</label></transition><transition><source ref="id4"/><target ref="id5"/><label kind="synchronisation" x="-488" y="-152">onBoat[type]!</label></transition><transition><source ref="id5"/><target ref="id6"/><label kind="synchronisation" x="-480" y="-8">off?</label><label kind="assignment" x="-648" y="-16">L:= 1- L</label><nail x="-528" y="48"/><nail x="-544" y="48"/></transition></template><template><name>Observer</name><declaration>personType left[8] = {0,0,1,2,2,3,4,5};
personType right[8] = {-1,-1,-1,-1,-1,-1,-1,-1};
personType boat[2] = {-1,-1};
</declaration><location id="id7" x="-288" y="-328"></location><location id="id8" x="-288" y="-168"></location><location id="id9" x="-288" y="0"></location><init ref="id9"/><transition><source ref="id7"/><target ref="id8"/><label kind="select" x="-240" y="-312">e : personType</label><label kind="synchronisation" x="-208" y="-256">offBoat[e]?</label><nail x="-224" y="-248"/></transition><transition><source ref="id8"/><target ref="id7"/><label kind="select" x="-424" y="-216">e : personType</label><label kind="synchronisation" x="-432" y="-264">onBoat[e]?</label><nail x="-352" y="-248"/></transition><transition><source ref="id8"/><target ref="id9"/><label kind="select" x="-256" y="-152">e : personType</label><label kind="synchronisation" x="-208" y="-96">offBoat[e]?</label><nail x="-224" y="-80"/></transition><transition><source ref="id9"/><target ref="id8"/><label kind="select" x="-424" y="-40">e : personType</label><label kind="synchronisation" x="-440" y="-96">onBoat[e]?</label><nail x="-296" y="-16"/><nail x="-360" y="-80"/></transition></template><system>// Place template instantiations here.

Dad = Person(adultOn,1);
Mom = Person(adultOn,3);
Police = Person(adultOn,5);

Boy1 = Person(childOn,0);
Boy2 = Person(childOn,0);
Girl1 = Person(childOn,2);
Girl2 = Person(childOn,2);
Thief = Person(childOn,4);

// List one or more processes to be composed into a system.


system Boat,Dad,Mom,Police,Boy1,Boy2,Girl1,Girl2,Thief;</system></nta>